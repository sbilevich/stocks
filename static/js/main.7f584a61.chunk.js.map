{"version":3,"sources":["services/tinkoff-service.js","components/page/index.js","components/page/page.js","components/items/index.js","components/items/items.js","services/finnhub-service.js","services/tinkoff-service2.js","components/item-details/index.js","components/item-details/item-details.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/portfolio/index.js","components/portfolio/portfolio.js","components/links/index.js","components/links/links.js","components/stocks/index.js","components/stocks/stocks.js","components/itemsTable/itemsTable.js","components/currencies/index.js","components/currencies/currencies.js","components/itemsTable/index.js","components/bonds/index.js","components/bonds/bonds.js","components/etfs/index.js","components/etfs/etfs.js","components/app/index.js","components/app/app.js","index.js"],"names":["tinkoffService","_apiBase","resource","url","method","body","a","loadFromApi","fetch","headers","Headers","JSON","stringify","res","ok","Error","status","json","getResource","postResource","getStonks","payload","instruments","getPortfolio","positions","getOperations","figi","from","Date","toISOString","to","operations","getItemByFigi","getCurrencyPortfolio","currencies","getMarketCurrencies","getCandles","getTime","candles","postLimitOrder","selectedOperation","lots","lotPrice","postCurrencyLomitOrder","name","Page","left","right","Row","className","Col","Items","arr","map","item","ticker","currency","label","props","renderItem","title","onClick","onItemSelected","items","this","renderItems","Component","finnhubService","getPrice","c","getStockInfo","tinkoffService2","companyInfo","companyName","console","log","brands","getCurrencyInfo","values","getStocks","getETFs","getBonds","ItemDetails","state","stockProfile","stockPrice","updatePrice","setState","updateStockProfile","brand","onChangeOperation","event","target","value","onLotsChange","onPriceChange","handdleClick","submitOrder","preventDefault","isCurrency","updateDetails","interval","setInterval","prevProps","clearInterval","operation","id","date","operationType","price","quantity","fDate","toLocaleDateString","stockCurrency","isin","isValidCurrency","operationStockList","renderOperations","Tabs","Tab","eventKey","Form","FormGroup","Label","Control","as","placeholder","onChange","type","Button","variant","disable","Image","src","rounded","brandInfo","country","sector","width","frameborder","height","SearchPannel","searchText","onSearchChange","FormControl","Portfolio","portfolioList","currencyPositions","search","roundedCircle","balance","portfolioDetails","selectedItem","text","filter","toLowerCase","includes","Links","Stocks","stocksList","stonks","alt","stockDetails","ItemsTable","defaultRenderItemLabel","symbol","logoName","replace","defaultRenderRow","renderItemLabel","defaultRenderHeader","renderRow","renderHeader","currencyHeader","Table","striped","bordered","hover","Currencies","Bonds","showName","onError","e","onerror","bonds","yieldToClient","dateToClient","Etfs","etfs","App","updatePositions","getAllCurrencies","stocks","newStocks","forEach","stonk","foundStock","find","stock","newStock","push","sort","b","newPositions","position","foundPosition","instrumentType","newCurrencyPortfolio","foundCurrency","substring","properties","allCurrencies","newAllCurrencies","basename","path","exact","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7f584a61.chunk.js","sourcesContent":["export default class TinkoffService {\n    \n    _apiBase = \"https://api-invest.tinkoff.ru/openapi/sandbox/\"\n        \n    \n\n    resource = async (url, method, body) => {\n        const loadFromApi = () => {\n            return fetch(`${this._apiBase}${url}`, { \n                method, \n                headers: new Headers({\n                  'Content-Type': 'application/json',\n                  'Authorization': 'Bearer t.4VjtdFG1xOPwrf96iRoDJ86wld3GZoEXIu9045OpPdXRbHXcVHsrUjMbms9yGiNP-QW9rePpUYP_uF9uiZR6Ug', \n                }), \n                body: JSON.stringify(body)\n              });\n        }\n        const res = await loadFromApi();\n        // console.log(res)\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}, received ${res.status}`);\n        }\n        return res.json();\n    }\n    getResource = (url) => {\n        return this.resource(url, 'get')\n    }\n\n    postResource = (url, body) => {\n        return this.resource(url, 'post', body)\n    }\n\n    getStonks = async () => {\n        const res = await this.getResource('/market/stocks')\n        return res.payload.instruments\n    }\n\n    getPortfolio = async () => {\n        const res = await this.getResource('portfolio');\n        return res.payload.positions\n    }\n\n    getOperations = async (figi) => {\n        const from = new Date(0).toISOString()\n        const to = new Date().toISOString()\n        const res = await this.getResource(`operations?from=${from}&to=${to}&figi=${figi}`)\n        return res.payload.operations\n    }\n\n    getItemByFigi = async (figi) => {\n        const res = await this.getResource(`market/search/by-figi?figi=${figi}`)\n        return res.payload\n    }\n\n    getCurrencyPortfolio = async() => {\n        const res = await this.getResource('portfolio/currencies')\n        return res.payload.currencies\n    }\n\n    getMarketCurrencies = async() => {\n        \n        const res = await this.getResource('/market/currencies')\n        return res.payload.instruments\n    }\n\n    getCandles = async (figi) => {\n        const from = new Date(new Date().getTime() - 60000).toISOString()\n        const to = new Date().toISOString()\n        const res = await this.getResource(`market/candles?figi=${figi}&from=${from}&to=${to}&interval=1min`)\n        return res.payload.candles\n    }\n\n    postLimitOrder = async (figi, selectedOperation, lots, lotPrice) => {\n        return await this.postResource(`orders/limit-order?figi=${figi}`, \n        {\n            \"lots\": +lots,\n            \"operation\": selectedOperation,\n            \"price\": +lotPrice\n          })\n          \n    }\n\n    postCurrencyLomitOrder = async (name,  selectedOperation, lots, lotPrice) => {\n        return await this.postResource('currencies/balance', \n        {\n            \"currency\": name,\n            \"balance\": ''\n        })\n    }\n\n}    \n\nexport const tinkoffService = new TinkoffService();\n","import Page from './page'\nexport default Page","import { Row, Col } from \"react-bootstrap\";\nimport React from 'react'\n\nconst Page = ({left, right}) => {\n    return (\n      <Row className=\"row mb2\">\n        <Col className=\"col-md-6\">\n          {left}\n        </Col>\n        <Col className=\"col-md-6\">\n          {right}\n        </Col>\n      </Row>\n    )\n  }\n  export default Page","import Items from './items'\nexport default Items\n","import React, { Component } from 'react';\nimport './items.css'\n\nexport default class Items extends Component {\n\n    \n\n    renderItems(arr) {\n        return arr.map((item) => {\n            const {ticker, currency} = item\n            const label = this.props.renderItem(item)\n            return (\n                <li className=\"list-group-item\"\n                    key={ticker ? ticker : currency}\n                    title={ticker}\n                    onClick={() => this.props.onItemSelected(item)}>\n                        {label}    \n                </li>\n            )\n        })\n    }\n\n    render() {\n        const items = this.renderItems(this.props.positions)\n        return (\n            <>\n                <ul className=\"item-list list-group\">\n                    {items}\n                </ul>\n                <br/>\n            </>\n        )\n    }\n\n}","export default class FinnhubService {\n    \n    _apiBase = \"https://finnhub.io/api/v1/\"\n        \n    \n\n    resource = async (url, method, body) => {\n        const loadFromApi = () => {\n            return fetch(`${this._apiBase}${url}&token=sandbox_c00nb9748v6viomea87g`, { \n                method, \n\n                body: JSON.stringify(body)\n              });\n        }\n        const res = await loadFromApi();\n        // console.log(res)\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}, received ${res.status}`);\n        }\n        return res.json();\n    }\n\n    getResource = (url) => {\n        return this.resource(url, 'get')\n    } \n\n    getPrice = async(ticker) => {\n        const res = await this.getResource(`quote?symbol=${ticker}`)\n        return res.c\n    }\n\n    getStockInfo = (ticker) => {\n        return this.getResource(`stock/profile2?symbol=${ticker}`)\n    }\n\n}        \n\nexport const finnhubService = new FinnhubService();","export default class TinkoffService2 {\n    \n    _apiBase = \"https://www.tinkoff.ru/api/\"\n        \n    \n\n    resource = async (url, method, body) => {\n        const loadFromApi = () => {\n            return fetch(`${this._apiBase}${url}`, { \n                method, \n                headers: new Headers({\n                  'Content-Type': 'application/json'\n                }), \n                body: JSON.stringify(body)\n              });\n        }\n        const res = await loadFromApi();\n        // console.log(res)\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}, received ${res.status}`);\n        }\n        return res.json();\n    }\n    getResource = (url) => {\n        return this.resource(url, 'get')\n    }\n\n    postResource = (url, body) => {\n        return this.resource(url, 'post', body)\n    }\n\n    companyInfo = async(companyName) => {\n        const res = await this.postResource('trading/symbols/brands', \n        {\"brandId\": companyName\n    })\n        console.log(companyName, res)\n        return res.payload.brands[0]\n        \n    }\n\n    getCurrencyInfo = async() => {\n        const res = await this.postResource('trading/currency/list',\n        {\n            \"country\": \"All\",\n            \"currentPage\": 0,\n            \"end\": 12,\n            \"orderType\": \"Asc\",\n            \"pageSize\": 12,\n            \"sortType\": \"ByBuyBackDate\",\n            \"start\": 0\n        })\n        return res.payload.values\n    }\n    getStocks = async() => {\n        const res = await this.postResource('trading/stocks/list',\n        {\n            \"country\": \"All\",\n            \"orderType\": \"Asc\",\n            \"sortType\": \"ByName\",\n            \"start\": \"0\"\n        })\n        return res.payload.values\n\n    }\n\n    getETFs = async() => {\n        const res = await this.postResource('trading/etfs/list',\n        \n        {\n            \"country\": \"All\",\n            \"orderType\": \"Desc\",\n            \"sortType\": \"ByEarnings\",\n            \"start\": \"0\"\n        })\n        return res.payload.values\n    }\n\n    getBonds = async() => {\n        const res = await this.postResource('trading/bonds/list',\n        \n        {\n            \"country\": \"All\",\n            \"orderType\": \"Desc\",\n            \"sortType\": \"ByYieldToClient\",\n            \"start\": \"0\"\n        })\n        return res.payload.values\n    }\n\n\n}    \nexport  const tinkoffService2 = new TinkoffService2()","import ItemDetails from './item-details'\nexport default ItemDetails;\n","import React, { Component } from 'react'\nimport { Tabs, Tab, Row, Col, FormGroup, Form, Button, Image } from 'react-bootstrap';\nimport { finnhubService } from '../../services/finnhub-service';\nimport {tinkoffService} from '../../services/tinkoff-service'\nimport {tinkoffService2} from '../../services/tinkoff-service2'\nimport './item-details.css'\n\nexport default class ItemDetails extends Component {\n\n    state = {\n        operations: [],\n        selectedOperation: 'Buy',\n        stockProfile: {},\n        lots: 0,\n        lotPrice: 0,\n        stockPrice: 0\n    \n    }\n\n    componentDidMount() {\n     \n        this.updateDetails()\n        this.updateStockProfile()\n        this.interval = setInterval(this.updatePrice, 2000)\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.item !== prevProps.item) {\n            this.updateDetails()\n            this.updatePrice()\n            this.updateStockProfile()\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval)\n    }\n\n    async updateDetails() {\n        const {item} = this.props;\n        const {figi} = item;\n        const operations = await tinkoffService.getOperations(figi);\n        this.setState({\n            operations\n        })\n\n    }\n\n    updatePrice = async() => {\n        const {item} = this.props;\n        const {ticker} = item;\n        const stockPrice = await finnhubService.getPrice(ticker);\n        this.setState({\n            stockPrice\n        })\n    }\n\n    updateStockProfile = async() => {\n        const {item} = this.props;\n        const {brand} = item;\n        const stockProfile = await tinkoffService2.companyInfo(brand);\n        this.setState({\n            stockProfile\n        })\n        console.log({stockProfile})\n    }\n\n\n    renderOperations(operations) {\n       return operations.map((operation) => {\n           const {id, date, operationType, price, quantity, currency} = operation\n           const fDate = new Date(date).toLocaleDateString()\n           return (\n               <li className=\"list-group-item\" key={id}>\n                  {fDate} : {operationType} {quantity} stock(s) for {price}{currency} \n               </li>\n           ) \n        })\n    }\n\n    onChangeOperation = (event) => {\n        this.setState({\n            selectedOperation: event.target.value\n        })\n    }\n\n    onLotsChange = (event) => {\n        this.setState({\n            lots: event.target.value\n        })\n    }\n\n    onPriceChange = (event) => {\n        this.setState({\n            lotPrice: event.target.value\n        })\n    }\n\n    handdleClick = async (event) => {\n        const {submitOrder, item} = this.props\n        event.preventDefault();\n        const{selectedOperation, lots, lotPrice} = this.state\n        const{figi, isCurrency, name} = item\n        await submitOrder(figi, isCurrency, name, selectedOperation, lots, lotPrice)\n        await this.updateDetails();\n        this.setState ({\n            selectedOperation: 'Buy',\n            lots: 0,\n            lotPrice: 0\n        })\n    }\n    \n    render() {\n        const {ticker, name, stockCurrency, isin, isCurrency, isValidCurrency, price} = this.props.item\n        const {operations, selectedOperation, lots, lotPrice, stockPrice, stockProfile} = this.state\n        const operationStockList = this.renderOperations(operations)\n    \n        return (\n            \n            <div className=\"itemDetails\">\n                <h3>{isCurrency ? ticker: `${ticker} - ${name}`}</h3>\n                <h4>{isCurrency ? price : `${stockPrice} ${stockCurrency}`}</h4>\n                <Tabs>\n                    \n                    <Tab eventKey=\"order\" title=\"Order\">\n                        <Form>\n                            <h5>Limit order for {ticker}</h5>\n                            <FormGroup>\n                                <Row>\n                                    <Col>\n                                        <Form.Label>Operation</Form.Label>\n                                        <Form.Control as=\"select\" placeholder=\"Operation\" value={selectedOperation} onChange={this.onChangeOperation}>\n                                            <option value=\"Buy\">Buy</option>\n                                            <option value=\"Sell\">Sell</option>\n                                        </Form.Control>\n                                    </Col>\n                                    <Col>\n                                        <Form.Label>Lots</Form.Label>\n                                        <Form.Control type=\"select\" placeholder=\"Lots\" value={lots} onChange={this.onLotsChange}/>\n                                    </Col>\n                                    <Col>\n                                        <Form.Label>Price</Form.Label>\n                                        <div className=\"d-flex\">\n                                        <Form.Control type=\"select\" placeholder=\"Price\" value={lotPrice} onChange={this.onPriceChange}/>\n                                        <span className=\"currency\">{stockCurrency}</span>\n                                        </div>\n                                        \n                                    </Col>\n                                </Row>\n                            </FormGroup>\n                            <Button variant=\"primary\" type=\"submit\" onClick={this.handdleClick}>\n                                Submit\n                            </Button>\n                        </Form>\n                    </Tab>\n                    <Tab eventKey=\"operations\" title=\"Operations\" disable={!isValidCurrency}>\n                        <ul className=\"item-list list-group\">\n                            {operationStockList}\n                        </ul>\n                    </Tab>\n                    <Tab eventKey=\"profile\" title=\"Profile\" disable={isCurrency}>\n                    <Form>\n                            <h5>{stockProfile.name}</h5>\n                            <FormGroup>\n                                <Row>\n                                   \n                                    <Col className=\"d-flex\">\n                                        <Image className=\"logo\" src={`http://static.tinkoff.ru/brands/traiding/${isin}x160.png`} rounded />\n                                        <div className=\"info\">\n                                        <div>{stockProfile.brandInfo}</div>\n                                        <div>Country: {stockProfile.country}</div>\n                                        <div>Sector: {stockProfile.sector}</div>\n                                   \n                                        \n                                        </div>   \n                                    </Col>\n                                    \n                                </Row>\n                            </FormGroup>\n                        \n                        </Form>\n                    </Tab>\n                </Tabs>\n                <iframe \n                width=\"100%\"\n                frameborder=\"0\" \n                height=\"400\" \n                src={`https://widget.finnhub.io/widgets/stocks/chart?symbol=${ticker}&amp;watermarkColor=%23222222&amp;backgroundColor=%23222222&amp;textColor=white`}\n                ></iframe>\n\n            </div>\n\n        )\n    }\n}\n","import SearchPannel from './search-panel'\nexport default SearchPannel","import React, { Component } from 'react'\nimport {FormControl} from 'react-bootstrap'\nimport './search-panel.css'\n\nexport default class SearchPannel extends Component {\n\n    state = {\n        searchText : ''\n    }\n\n    onSearchChange = (event) => {\n        const searchText = event.target.value\n        this.setState({\n            searchText\n        })\n        this.props.onSearchChange(searchText)\n    }\n    render() {\n        const{searchText} = this.state\n        return (\n            \n            <FormControl type=\"text\" value={searchText} placeholder=\"Search\" className=\"mr-sm-2 search\" onChange={this.onSearchChange}/>\n            //<input type=\"text\" value={searchText} placeholder=\"search\" onChange={this.onSearchChange}/>\n        )\n    }\n}","import Portfolio from './portfolio'\nexport default Portfolio","import React, { Component }  from 'react'\nimport Page from '../page';\nimport Items from '../items';\nimport ItemDetails from '../item-details'\nimport {Image} from 'react-bootstrap'\nimport SearchPannel from '../search-panel';\nimport '../portfolio/portfolio.css'\nexport default class Portfolio extends Component {\n    componentDidMount(){\n        this.props.onItemSelected(null);\n    }\n\n    state = {\n        searchText: ''\n    }\n    search(arr, text) {\n        if (text === '') {\n            return arr\n        }\n        return arr.filter((item) => item.name.toLowerCase().includes(text.toLowerCase()))\n    }\n\n    onSearchChange = (searchText) => {\n        this.setState({\n            searchText\n        })\n    }\n\n    portfolioList = () => {\n        const {searchText} = this.state\n        const {positions, currencyPositions, onItemSelected} = this.props\n        return (\n            <>\n                <SearchPannel onSearchChange={this.onSearchChange}/>\n                    <div className=\"title\">My Stocks</div>\n                    <Items \n                        positions={this.search(positions, searchText)} \n                        onItemSelected={onItemSelected}\n                        renderItem={({name, lots, isin}) => {\n                            return (\n                                <div className=\"d-flex justify-content-between\">\n                                    <div>\n                                    <Image className=\"smallLogo\" src={`http://static.tinkoff.ru/brands/traiding/${isin}x160.png`} roundedCircle />\n                                        {name} \n                                    </div>\n                                    <div className=\"lots\">{lots}</div>\n                                     \n                                </div>\n                            );\n                        }\n                        \n                        }/>  \n\n                <div className=\"title\">My Currencies</div>\n              <Items\n                positions={this.search(currencyPositions, searchText)}\n                onItemSelected={onItemSelected}\n                renderItem={({ currency, balance }) => {\n                    \n                    return (\n                        <div className=\"d-flex justify-content-between\">\n                            <div>\n                                <Image className=\"smallLogo\" src={`http://static.tinkoff.ru/brands/traiding/${currency}x160.png`} roundedCircle />\n                                {currency} \n                            </div>\n                            <div className=\"lots\">{balance}</div>\n\n                        </div>\n                    );\n                }\n\n                } />\n            </>\n        )\n    }\n\n    portfolioDetails = () => {\n        const {selectedItem} = this.props\n        if (!selectedItem) {\n            return <div className=\"itemSelect\">Select an item from a list</div>;\n          }\n\n          return (\n            <ItemDetails \n                item={selectedItem} \n                submitOrder={this.props.submitOrder}\n            />\n        )\n    }\n\n    \n    render() {\n        return (\n            <Page left={this.portfolioList()} right={this.portfolioDetails()}/>\n\n        )\n    }\n\n}","import Links from './links'\nexport default Links","import React from 'react'\nimport '../links/links.css'\nimport {Link} from 'react-router-dom'\n\nconst Links = () => {\n    return (\n        <ul className=\"d-flex\">\n            <li>\n                <Link to=\"/\">Portfolio</Link>\n            </li>\n            <li>\n                <Link to=\"/stocks\">Stocks</Link>\n            </li>\n            <li>\n                <Link to=\"/currencies\">Currencies</Link>\n            </li>\n            <li>\n                <Link to=\"/bonds\">Bonds</Link>\n            </li>\n            <li>\n                <Link to=\"/etfs\">ETFs</Link>\n            </li>\n        </ul>\n    )\n}\n\nexport default Links","import Stocks from './stocks'\nexport default Stocks","import React, { Component }  from 'react'\nimport Page from '../page';\nimport Items from '../items';\nimport ItemDetails from '../item-details'\nimport {tinkoffService} from '../../services/tinkoff-service'\nimport { Image } from 'react-bootstrap';\nimport SearchPannel from '../search-panel/';\nimport '../stocks/stocks.css'\n\nexport default class Stocks extends Component {\n    componentDidMount(){\n        this.props.onItemSelected(null);\n    }\n    state={\n        searchText: ''\n    }\n\n    search(arr, text) {\n        if (text === '') {\n            return arr\n        }\n        return arr.filter((item) => item.name.toLowerCase().includes(text.toLowerCase()))\n    }\n\n    onSearchChange = (searchText) => {\n        this.setState({\n            searchText\n        })\n    }\n\n    stocksList = () => {\n        const {searchText} = this.state\n        const { stonks,  onItemSelected} = this.props\n        return (\n            <>\n                <SearchPannel onSearchChange={this.onSearchChange}/>\n                    <Items \n                        positions={this.search(stonks, searchText)} \n                        onItemSelected={onItemSelected}\n                        renderItem={({name, isin}) => {\n                            return (\n                                <>\n                                    <Image className=\"smallLogo\" src={`http://static.tinkoff.ru/brands/traiding/${isin}x160.png`}  alt=\"logo\" roundedCircle />\n                                    {name}\n                                </>\n                            );\n                        }}/> \n            </>            \n        )\n    }\n\n    stockDetails = () => {\n        const {selectedItem} = this.props\n        if (!selectedItem) {\n            return <div className=\"itemSelect\" >Select an item from a list</div>;\n          }\n        return (\n            <ItemDetails item={selectedItem} submitOrder={this.props.submitOrder}/>\n        )\n    }\n\n    \n    render() {\n        return (\n            <Page left={this.stocksList()} right={this.stockDetails()}/>\n\n        )\n    }\n\n}","import React, { Component } from 'react';\nimport {Image, Table} from 'react-bootstrap'\n\n/* \n    props:\n        items: []\n        renderRow?: (item) => <tr></tr>\n        renderItemLabel?: (item) => <div></div>\n        renderHeader?: () => <tr></tr>\n*/\n\nexport default class ItemsTable extends Component {\n    defaultRenderItemLabel = (item) => {\n            const { ticker, logoName = '' } = item.symbol;\n            return (\n                <div className=\"d-flex justify-content-between\">\n                    <div>\n                        <Image className=\"smallLogo\" src={`http://static.tinkoff.ru/brands/traiding/${logoName.replace('.png', 'x160.png')}`} roundedCircle />\n                        {ticker}\n                    </div>\n    \n                </div>\n            );\n    }\n    \n    defaultRenderRow = (item) => {\n        const { renderItemLabel = this.defaultRenderItemLabel } = this.props;\n        const {ticker, currency, price} = item\n        const label = renderItemLabel(item)\n        return (\n            <tr key={ticker ? ticker : currency}>\n                <td>{label}</td>\n                <td>{price}</td>\n            </tr>\n        )\n    }\n\n    defaultRenderHeader = () => (\n        <tr>\n            <td>Ticker</td>\n            <td>Price</td>\n        </tr>\n    )\n\n    renderItems(items) {\n        const { renderRow = this.defaultRenderRow } = this.props;\n        return items.map((item) => {\n            return renderRow(item);\n        })\n    }\n\n    render() {\n        const { renderHeader = this.defaultRenderHeader } = this.props;\n        const items = this.renderItems(this.props.items)\n        const currencyHeader = renderHeader();\n        \n        return (\n            <>\n                <Table striped bordered hover variant=\"dark\">\n                    <thead>\n                        {currencyHeader}\n                    </thead>\n                    <tbody>\n                        {items}\n                    </tbody>\n                    \n                </Table>\n                <br/>\n            </>\n        )\n    }\n\n}","import Currencies from './currencies'\nexport default Currencies","import React, { Component } from 'react'\nimport { Image, Table } from 'react-bootstrap'\nimport ItemsTable from '../itemsTable/itemsTable';\n\nclass Currencies extends Component {\n\n    // renderItem=({ symbol }) => {\n    //     const { ticker, logoName = '' } = symbol;\n    //     return (\n    //         <div className=\"d-flex justify-content-between\">\n    //             <div>\n    //                 <Image className=\"smallLogo\" src={`http://static.tinkoff.ru/brands/traiding/${logoName.replace('.png', 'x160.png')}`} roundedCircle />\n                    \n    //                 {ticker}\n    //             </div>\n\n    //         </div>\n    //     );\n    // }\n\n    // renderItems(arr) {\n    //     return arr.map((item) => {\n    //         const {ticker, currency, price} = item\n    //         const label = this.renderItem(item)\n    //         return (\n                \n    //             <tr key={ticker ? ticker : currency}>\n    //                 <td>{label}</td>\n    //                 <td>{price}</td>\n    //             </tr>\n    //         )\n    //     })\n    // }\n\n    // renderHeader = () => {\n    //     return (\n    //         <tr>\n    //             <td>Ticker</td>\n    //             <td>Price</td>\n    //         </tr>\n    //     );\n    // }\n\n    render() {\n        const { \n            currencies,\n         } = this.props\n         return (\n             <ItemsTable\n                items={currencies}\n            />\n         );\n        // const items = this.renderItems(currencies)\n        \n        // return (\n        //     <>\n        //         <Table striped bordered hover variant=\"dark\">\n        //             <thead>\n        //                 {currencyHeader}\n        //             </thead>\n        //             <tbody>\n        //                 {items}\n        //             </tbody>\n                    \n        //         </Table>\n        //         <br/>\n        //     </>\n  \n        // )\n\n    }\n\n\n}\n\nexport default Currencies;","import ItemsTable from './itemsTable'\nexport default ItemsTable","import Bonds from './bonds'\nexport default Bonds","import React, { Component } from 'react'\nimport { Image } from 'react-bootstrap'\nimport ItemsTable from '../itemsTable'\nimport SearchPannel from '../search-panel'\nimport './bonds.css'\n\n/*\n    props:\n        bonds: []\n*/\n\nclass Bonds extends Component {\n\n    state = {\n        searchText: ''\n    }\n    search(arr, text) {\n        if (text === '') {\n            return arr\n        }\n        return arr.filter((item) => item.symbol.showName.toLowerCase().includes(text.toLowerCase()) ||\n            item.symbol.ticker.toLowerCase().includes(text.toLowerCase()))\n    }\n\n    onSearchChange = (searchText) => {\n        this.setState({\n            searchText\n        })\n    }\n\n    renderItemLabel = (item) => {\n        const { \n            ticker, \n            showName, \n            logoName = 'http://static.tinkoff.ru/brands/traiding/US87238U2033x160.png',\n        } = item.symbol;\n        return (\n            <div className=\"d-flex justify-content-between\">\n                <div>\n                    {(\n                        <Image\n                            className=\"smallLogo\"\n                            src={`http://static.tinkoff.ru/brands/traiding/${logoName.replace('.png', 'x160.png')}`}\n                            onError={(e) => {\n                                e.target.onerror = null;\n                                e.target.src = \"http://static.tinkoff.ru/brands/traiding/US87238U2033x160.png\";\n                            }}\n                            roundedCircle\n                        />\n                    )}\n                    {showName} ({ticker})\n            </div>\n\n            </div>\n        );\n    }\n    render() {\n        const { bonds } = this.props\n        const { searchText } = this.state\n        return (\n            <>\n                <SearchPannel onSearchChange={this.onSearchChange} />\n                <ItemsTable\n                    items={this.search(bonds, searchText)}\n                    renderRow={(item) => {\n                        const { symbol, price = {}, yieldToClient, dateToClient } = item\n                        const { ticker } = symbol\n                        const { value, currency } = price\n                        const label = this.renderItemLabel(item)\n                        return (\n\n                            <tr key={ticker}>\n                                <td>{label}</td>\n                                <td>{value} {currency}</td>\n                                <td>{yieldToClient}%</td>\n                                <td>{new Date(dateToClient).toLocaleDateString()}</td>\n                            </tr>\n                        )\n                    }}\n                    // renderItemLabel={this.renderItemLabel}\n                    renderHeader={() => (\n                        <tr>\n                            <td>Bond</td>\n                            <td>Price</td>\n                            <td>Profit</td>\n                            <td>Date</td>\n                        </tr>)}\n                />\n\n            </>\n        )\n    }\n\n\n}\n\nexport default Bonds;","import Etfs from './etfs'\nexport default Etfs","import React, { Component } from 'react'\nimport { Image} from 'react-bootstrap'\nimport ItemsTable from '../itemsTable'\nimport SearchPannel from '../search-panel'\n\n\nclass Etfs extends Component {\n\n    state = {\n        searchText: ''\n    }\n\n    search(arr, text) {\n        if (text === '') {\n            return arr\n        }\n        return arr.filter((item) => item.symbol.showName.toLowerCase().includes(text.toLowerCase()) || \n        item.symbol.ticker.toLowerCase().includes(text.toLowerCase()))\n    }\n\n    onSearchChange = (searchText) => {\n        this.setState({\n            searchText\n        })\n    }\n\n    renderItemLabel = (item) => {\n        const { \n            ticker, \n            showName, \n            logoName = 'http://static.tinkoff.ru/brands/traiding/US87238U2033x160.png',\n        } = item.symbol;\n        return (\n            <div className=\"d-flex justify-content-between\">\n                <div>\n                    {(\n                        <Image\n                            className=\"smallLogo\"\n                            src={`http://static.tinkoff.ru/brands/traiding/${logoName.replace('.png', 'x160.png')}`}\n                            onError={(e) => {\n                                e.target.onerror = null;\n                                e.target.src = \"http://static.tinkoff.ru/brands/traiding/US87238U2033x160.png\";\n                            }}\n                            roundedCircle\n                        />\n                    )}\n                    {showName} ({ticker})\n            </div>\n\n            </div>\n        );\n    }\n    render() {\n        const { etfs } = this.props\n        const {searchText} = this.state\n        return (\n            <>\n                <SearchPannel onSearchChange={this.onSearchChange}/>\n                <ItemsTable \n                    items={this.search(etfs, searchText)}\n                    renderRow={(item) => {\n                                const {symbol, price = {}} = item\n                                const {ticker} = symbol\n                                const {value, currency} = price\n                                const label = this.renderItemLabel(item)\n                                return (\n                                    \n                                    <tr key={ticker}>\n                                        <td>{label}</td>\n                                        <td>{value} {currency}</td>\n                                    </tr>\n                                )\n                            }}\n                    renderHeader={() => (\n                        <tr>\n                            <td>ETF</td>\n                            <td>Price</td>\n                        </tr>)}\n                />\n            </>    \n        )\n        \n\n    }\n\n\n}\n\nexport default Etfs;","import App from './app';\nexport default App;","import React, { Component } from 'react';\nimport {tinkoffService} from '../../services/tinkoff-service'\nimport './app.css'\nimport Portfolio from '../portfolio'\nimport Links from '../links';\nimport Stocks from '../stocks'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport { tinkoffService2 } from '../../services/tinkoff-service2';\nimport Currencies from '../currencies';\nimport Bonds from '../bonds';\nimport Etfs from '../etfs'\n\n\nexport default class App extends Component {\n\n    state = {\n        stonks:[],\n        positions: [],\n        currencies: [],\n        currencyPositions: [],\n        bonds: [],\n        etfs: [],\n        selectedItem: null\n    }\n    async componentDidMount() {\n        this.updatePositions()\n        this.getStonks()\n       \n       await this.getCurrencyPortfolio()\n        this.getAllCurrencies()\n        this.getBonds()\n        this.getETFs()\n    }\n\n    async getStonks() {\n        const stonks = await tinkoffService.getStonks()\n        const stocks = await tinkoffService2.getStocks()\n        const newStocks = []\n\n        stonks.forEach((stonk) => {\n            const foundStock = stocks.find((stock) => {\n                return stock.symbol.ticker === stonk.ticker\n            });\n            if (!foundStock) {\n                return;\n            }\n            const newStock = {\n                ...stonk,\n                brand: foundStock.symbol.brand,\n                price: foundStock.price ? foundStock.price.value : null,\n                stockCurrency: foundStock.price ? foundStock.price.currency : null\n\n            }\n            \n            newStocks.push(newStock);\n        })\n        this.setState({\n            stonks: newStocks.sort((a, b) => a.name > b.name ? 1 : -1)\n        })\n       \n        \n    }\n    async updatePositions() {\n        const positions = await tinkoffService.getPortfolio();\n        const stocks = await tinkoffService2.getStocks()\n        const newPositions = []\n        positions.forEach((position) => {\n            const foundPosition = stocks.find((stock) => {\n                return stock.symbol.ticker === position.ticker\n            })\n            if (!foundPosition) {\n                return;\n            }\n            newPositions.push({\n                ...position,\n                brand: foundPosition.symbol.brand,\n                price: foundPosition.price ? foundPosition.price.value : null,\n                stockCurrency: foundPosition.price ? foundPosition.price.currency : null\n            })\n\n        })\n        this.setState({\n            positions: newPositions.sort((a, b) => a.name > b.name ? 1 : -1).filter((item) => item.instrumentType===\"Stock\")\n        })\n    }\n    async getCurrencyPortfolio() {\n        const currencies = await tinkoffService.getMarketCurrencies();\n        const currencyPositions = await tinkoffService.getCurrencyPortfolio();\n        const newCurrencyPortfolio = []\n        currencyPositions.forEach((position) => {\n            const foundCurrency = currencies.find((currency) => {\n                return position.currency === currency.ticker.substring(0, 3)\n            }) \n            newCurrencyPortfolio.push({\n                ...position,\n                properties: foundCurrency,\n                name: position.currency,\n                figi: foundCurrency ? foundCurrency.figi : '',\n                isValidCurrency: foundCurrency ? foundCurrency.figi : false ,\n                isCurrency: true\n            })\n          \n        })\n        this.setState({\n            currencyPositions: newCurrencyPortfolio\n        })\n\n    }\n\n    async getAllCurrencies() {\n        const allCurrencies = await tinkoffService2.getCurrencyInfo();\n        const {currencyPositions} = this.state\n        const newAllCurrencies = []\n\n        allCurrencies.forEach((currency) => {\n            const foundCurrency = currencyPositions.find((position) => {\n                return position.currency === currency.symbol.ticker.replace('RUB', '')\n            })\n            newAllCurrencies.push({\n                ...currency,\n                position: foundCurrency,\n                isCurrency: true,\n                ticker: currency.symbol.ticker,\n                price: currency.price.value\n            })\n           \n        })\n        \n        this.setState({\n            currencies: newAllCurrencies\n        })\n        \n    }\n\n    async getBonds() {\n        const bonds = await tinkoffService2.getBonds()\n        this.setState({\n            bonds\n        })\n    }\n\n    async getETFs() {\n        const etfs = await tinkoffService2.getETFs()\n        this.setState({\n            etfs\n        })\n    }\n\n    onItemSelected = async (selectedItem) => {\n        this.setState({\n            selectedItem\n        })\n    }\n\n    submitOrder = async(figi, isCurrency, selectedOperation, lots, lotPrice) => {\n        await tinkoffService.postLimitOrder(figi, selectedOperation, lots, lotPrice);\n        await this.updatePositions()\n    }\n\n    render() {\n        const {positions, stonks, currencies, bonds, etfs, currencyPositions, selectedItem} = this.state\n        return (\n            <>\n                <Router basename=\"stocks\">\n                    <Links/>\n                    <Route path=\"/\" exact render={()=> (\n                        <Portfolio \n                            positions={positions} \n                            currencies={currencies}\n                            currencyPositions={currencyPositions}\n                            selectedItem={selectedItem}\n                            onItemSelected={this.onItemSelected} \n                            submitOrder={this.submitOrder}\n                        />\n                    )}/>\n                    <Route path=\"/stocks\" exact render={()=> (\n                        <Stocks \n                            stonks={stonks} \n                            selectedItem={selectedItem}\n                            onItemSelected={this.onItemSelected} \n                            submitOrder={this.submitOrder}\n\n                        />\n                    )}/>\n                    <Route path=\"/currencies\" exact render={()=> (\n                        <Currencies \n                            currencies={currencies}\n                            currencyPositions={currencyPositions}\n                            onItemSelected={this.onItemSelected}\n                            selectedItem={selectedItem}\n                        />\n                    )}/>\n                    <Route path=\"/bonds\" exact render={()=> (\n                        <Bonds \n                            bonds={bonds}\n                        />\n                    )}/>\n\n                    <Route path=\"/etfs\" exact render={()=> (\n                        <Etfs \n                            etfs={etfs}\n                        />\n                    )}/>\n                </Router>\n                \n            </>\n \n        )\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './components/app'\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}